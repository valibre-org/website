---
title: Virto Network
layout: index.liquid
data:
  route: home
---

<dialog data-modal class="light-green-bg">
        <span class="close-button boldest">X</span>
        <div id="modal-message" class="center"></div>
</dialog>

{% for home_section in site.data.index.home_sections %}
<section {% if home_section.id == "home" %} id="home">
	<article class="max animated">
		<div class="text-section lightest-lavender-text">
			<p>{{ home_section.eyebrow }}</p>
			<h1>Virto: {{ home_section.title }}</h1>
			<p>{{ home_section.paragraph }}</p>
			<a href="#mail-cta" class="services-section__scroll-link">
                <span class="services-section__scroll-text dark-green-text">{{ home_section.call_to_action }}</span>
                <figure class="services-section__scroll-arrow">
                    {% include "services_arrow.svg" %} 
                </figure>
            </a>
		</div>
		<div class="buttons-container hide">
			<figure>
				{% include "right.svg" %}
			</figure>
			<figure>
				{% include "left.svg" %}
			</figure>
		</div>
		<figure class="arrow-right">
				{% include "arrow_right.svg" %}
			</figure>
		<figure class="logo">
			{% include "Apps.svg" %}
		</figure>
	</article>
</section>
{% endif %}

<section {% if home_section.id == "jobs" %} id="jobs" class="light-green-text">
	<h2 class="animated center title-max-width">{{ home_section.title }}</h2>
	<article class="max">
			{% for card in home_section.cards %}
				<div class="animated box">
					<h3 class="regular outfit">{{ card.title }}</h3>
					<p class="regular">{{ card.content }}</p>
				</div>
		{% endfor %}
	</article>
</section>
{% endif %}

<section {% if home_section.id == "mail-cta" %} id="mail-cta" class="light-lavender-bg dark-olive-text">
	<article class="animated max">
		<h1 class="header-0">{{ home_section.title }}</h1>
		<form id="mail-form">
			<input type="text" name="contactName" placeholder="{{ home_section.placeholder_name }}">
			<input type="text" name="contactLastName" placeholder="{{ home_section.placeholder_last_name }}">
			<input type="email" name="contactEmail" placeholder="{{ home_section.placeholder_email }}">
			<button type="submit" id="mail-button" class="bolder">{{ home_section.cta }}</button>
		</form>
	</article>
</section>
{% endif %}

<section {% if home_section.id == "benefits" %} id="benefits" class="white-bg">
	<article class="max column">
		<h2 class="dark-green-text">{{ home_section.title }}</h2>
		<div class="benefits-container dark-olive-text">
			{% for card in home_section.cards %}
			<div class={{ card.class }}>
				<div class="animated benefits-column">
					<figure class="benefits-image">
						{% include card.svg %}
					</figure>
				</div>
				<div class="animated benefits-column text">
					<h2>{{ card.title }}</h2>
					<p>{{ card.content }}</p>
				</div>  
			</div>
		{% endfor %}
      
	</article>
</section>
{% endif %}

{% if home_section.id == "testimonials" %}
	<section id="testimonials" class="light-lavender-bg center">
		<article class="max animated column">
			<h2 class="dark-lavender-text">{{ home_section.title }}</h2>
			<div class="testimonials-container">
				{% for testimonial in home_section.testimonials %}
					<div class="testimonial {% unless forloop.first %}hidden{% endunless %}">
						<img src="{{ testimonial.avatar }}" alt="Avatar de {{ testimonial.person }}" class="avatar">
						<p class="testimonial-message">{{ testimonial.message }}</p>
						<p class="testimonial-person bolder">{{ testimonial.person }}</p>
					</div>
				{% endfor %}
				<a class="arrow left" id="prevTestimonial">
					{% include "left.svg" %}
				</a>
				<a class="arrow right" id="nextTestimonial">
					{% include "right.svg" %}
				</a>
			</div>
		</article>
	</section>
{% endif %}

{% if home_section.id == "qa" %}
	<section id="q&a" class="white-bg">
		<article class="max animated">
			<h2 class="dark-green-text">{{ home_section.title }}</h2>
			<div class="q&a-container">
				<ul class="faq-list">
					{% for question in home_section.questions %}
						<li>
							<button class="question-button bolder">{{ question.question }}</button>
							<div class="answer hidden">
								<p>{{ question.answer }}</p>
							</div>
						</li>
					{% endfor %}
				</ul>
			</div>
		</article>
	</section>
{% endif %}

	<section {% if home_section.id == "virto-supporters" %} id="virto-supporters" class="whitest-bg">
		<article class="max animated column">
			<h3 class="dark-olive-text boldest header-2">{{ home_section.title }}</h3>
				<ul class="supporters-list">
					{% for supporter in home_section.supporters %}
						<li>
						<a class="link-to" title={{ supporter.title }} href="{{ supporter.link }}">
							{% include supporter.icon %}
						</a>
						</li>
					{% endfor %}
				</ul>
		</article>
	</section>
{% endif %}

<section {% if home_section.id == "cta" %} id="cta" class="cta light-lavender-bg">
	<article class="animated center dark-olive-text">
		<h3 class="bolder">{{ home_section.eyebrow }}</h3>
		<h2 class="bolder">
			<span>{{ home_section.title }}</span>
		</h2>
		<h3>{{ home_section.content  }}</h3>
		<button class="bolder"><a href={{ home_section.href }} >{{ home_section.call_to_action }}</a></button>
		<ul>
		{% for social in home_section.socials %}
			<a class="link-to" title={{ social.title }} href={{ social.link }}>
				{% include social.svg %}
			</a>
		{% endfor %}
		</ul>
	</article>
</section>
{% endif %}
{% endfor %}

{% assign env = site.data.env %}

<script>
const $ = document.querySelector.bind(document),
	$$ = document.querySelectorAll.bind(document);
const addViewedClass = ([e], ob) => {
	e.target.classList.add('viewed');
	ob.unobserve(e.target);
};
const whenVisible = (elements, fn, opts) => {
	const ob = new IntersectionObserver(fn, opts);
	$$(elements).forEach(e => ob.observe(e));
};
const makeSticky = ([br]) =>
	br.target.nextElementSibling.classList.toggle('fixed', br.intersectionRatio === 1);

whenVisible('main>section', addViewedClass, { threshold: 0.2 });
whenVisible('.sticky-hack', makeSticky, { threshold: [0, 1] });

const testimonials = document.querySelectorAll('.testimonial');
const prevButton = document.getElementById('prevTestimonial');
const nextButton = document.getElementById('nextTestimonial');
let currentTestimonial = 0;

function showTestimonial(index) {
    testimonials[currentTestimonial].classList.add('hidden');
    currentTestimonial = (index + testimonials.length) % testimonials.length;
    testimonials[currentTestimonial].classList.remove('hidden');
}

prevButton.addEventListener('click', () => showTestimonial(currentTestimonial - 1));
nextButton.addEventListener('click', () => showTestimonial(currentTestimonial + 1));

const questionButtons = document.querySelectorAll('.question-button');

questionButtons.forEach(button => {
    button.addEventListener('click', () => {
        const answer = button.nextElementSibling;
        answer.classList.toggle('show');
    });
});

// Airtable Connection
const apiKeyAirtable = '{{ env.AIRTABLE_API_KEY }}';
const baseId = '{{ env.AIRTABLE_BASE_ID }}';
const table = '{{ env.AIRTABLE_TABLE_ID }}';

const mailForm = document.getElementById('mail-form');
const modal = document.querySelector('[data-modal]')
const mailButton = document.getElementById('mail-button');
const closeButton = document.querySelector('.close-button');
const modalMessage = document.getElementById('modal-message');

function openModal(message) {
    modalMessage.innerHTML = message;
    modal.showModal();
}

closeButton.addEventListener('click', () => {
	modal.close()
});

mailForm.addEventListener('submit', async (event) => {
  event.preventDefault();

  const contactName = event.target.elements['contactName'].value;
  const contactLastName = event.target.elements['contactLastName'].value;
  const contactEmail = event.target.elements['contactEmail'].value;

  try {
	const data = {
		fields: {
			"Name": contactName,
			"LastName": contactLastName,
			"Email": contactEmail,
		}
	};

    const response = await fetch(`https://api.airtable.com/${baseId}/${table}`, {
      method: 'POST',
      headers: {
        'Authorization': `Bearer ${apiKeyAirtable}`,
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(data)
    });

	console.log(response.json())

    if (!response.ok) {
      throw new Error(`Airtable API error: ${response.status}`);
    }

    const result = await response.json();
	openModal(`<img src="/img/success.svg" alt="success" /><h2>Â¡Gracias!</h2><h3>Su mail ha sido registrado exitosamente.</h3>`);
    console.log('Datos enviados exitosamente a Airtable:', result);

  	} catch (error) {
		openModal('<img src="/img/error.svg" alt="error" /><h2>Error</h2><h3>Hubo un problema al registrar su mail.</h3><h3 class="bolder">Por favor, intente nuevamente.</h3>');
    	console.error("Error al enviar datos a Airtable:", error);
  }
});

</script>